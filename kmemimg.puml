@startuml

class MemoryImage {
    + execute(command: Command)
    + execute(query: Query)
}
MemoryImage ..> Command: runs >
MemoryImage ..> Query: runs >
MemoryImage --> EventSourcing: persists commands with >
MemoryImage --> TxMgr: keeps integrity through >

together {
    interface EventSourcing {
        <E> replay(eventConsumer: (E) -> Unit)
        append(event: Any)
    }
    note bottom of EventSourcing
        - Stores all events on persistent storage
        - In-memory state is reconstructed by
           replaying persisted events
    end note
    interface TxMgr {
        + begin()
        + <T> remember(value: T, undo: (T) -> Unit)
        + rollback()
    }
    note bottom of TxMgr
        A poor man's STM: Mutable properties participate
        in thread-local, undoable transactions
    end note
}

together {
    interface Command {
        applyTo(system: Any)
    }
    note bottom of Command
        // Transfer $20 between accounts
        bank[to].balance += 20
        bank[from].balance -= 20
    end note

    interface Query {
        extractFrom(system: Any): Any?
    }
    note bottom of Query
        // Names for accounts with a $70 balance
        bank.accounts.values
            .filter { it.balance == 70 }
            .map { it.name }
            .toSet()
    end note
}

@enduml