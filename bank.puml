@startuml
class Bank {
}
class Account {
    + id: String
    + name: String
    + balance: Amount
}
Bank "1" *--> "0..*" Account

interface Command<S> {
    + execute(system: S)
}

abstract class BankCommand<Bank>
Command <|.. BankCommand
BankCommand ..> Bank: modifies >

class CreateAccount {
    + id: String
    + name: String
}
BankCommand <|-- CreateAccount

abstract class AccountCommand {
    + accountId: String
    + execute(account: Account)
    + execute(system: Bank)
}
BankCommand <|-- AccountCommand
AccountCommand ..> Account: modifies >

class Deposit extends AccountCommand {
    + accountId: String
    + amount: Amount
}

class Withdrawal extends AccountCommand {
    + accountId: String
    + amount: Amount
}

class Transfer extends AccountCommand {
    + accountId: String
    + amount: Amount
}
Transfer ..> Deposit: uses >
Transfer ..> Withdrawal: uses >

@enduml