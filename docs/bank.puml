@startuml
skinparam class {
    BackgroundColor<<Domain>> Wheat
    BorderColor<<Domain>> Tomato
}

interface Command {
    + applyTo(system: Any)
}

together {
    class Bank <<Domain>> {
    }
    class Account <<Domain>> {
        + id: String
        + name: String
        + balance: Amount
    }
    Bank "1" *--> "0..*" Account
}

    interface BankCommand {
        + applyTo(bank: Bank)
    }
    Command <|-- BankCommand
    BankCommand ..> Bank: modifies >

class CreateAccount {
    + id: String
    + name: String
}
BankCommand <|.. CreateAccount
CreateAccount ..> Account: creates >

together {
    interface AccountCommand {
        + applyTo(account: Account)
    }
    BankCommand <|.. AccountCommand
    AccountCommand ..> Account: modifies >
    class Deposit extends AccountCommand {
        + accountId: String
        + amount: Amount
    }

    class Withdrawal extends AccountCommand {
        + accountId: String
        + amount: Amount
    }
}

class Transfer implements BankCommand {
    + fromAccountId: String
    + toAccountId: String
    + amount: Amount
}
Transfer ..> Deposit: delegates to >
Transfer ..> Withdrawal: delegates to >

@enduml